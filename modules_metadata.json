[
  {
    "title": "Assess Program Balance for Treatment and Control Groups",
    "description": "This function assesses the balance of independent variables across treatment and control groups by performing statistical tests (e.g., T-tests for continuous variables, Proportion tests for binary variables). It calculates the differences between the treatment and control groups, p-values, and adds significance markers (e.g., stars) for each variable. The output is a data frame with the assessment results, including subsample sizes for both groups.",
    "last_updated": "2025-01-27T04:02:35Z",
    "url": "https://github.com/juanguillermo3/evaluation_of_job_intermediation_program/blob/main/assess_program_balance.R",
    "file_path": "assess_program_balance.R",
    "repo_name": "evaluation_of_job_intermediation_program",
    "libraries": []
  },
  {
    "title": "Demographic Model",
    "description": "Provides a demographic model for workers registered with the job agency.",
    "last_updated": "2025-01-27T04:02:35Z",
    "url": "https://github.com/juanguillermo3/evaluation_of_job_intermediation_program/blob/main/demographics.R",
    "file_path": "demographics.R",
    "repo_name": "evaluation_of_job_intermediation_program",
    "libraries": []
  },
  {
    "title": "Worker Participation in Job Intermediation Programs",
    "description": "Describes workers' participation in multiple job intermediation programs provided by the agency personnel.",
    "last_updated": "2025-01-27T04:02:35Z",
    "url": "https://github.com/juanguillermo3/evaluation_of_job_intermediation_program/blob/main/experimental_cases.R",
    "file_path": "experimental_cases.R",
    "repo_name": "evaluation_of_job_intermediation_program",
    "libraries": []
  },
  {
    "title": "Data Sharing and Persistence Utilities",
    "description": "Provides tools to facilitate data sharing and persistence between application modules.",
    "last_updated": "2025-03-22T03:12:24Z",
    "url": "https://github.com/juanguillermo3/evaluation_of_job_intermediation_program/blob/main/persistence_utils.R",
    "file_path": "persistence_utils.R",
    "repo_name": "evaluation_of_job_intermediation_program",
    "libraries": [
      "openxlsx"
    ]
  },
  {
    "title": "sample balance in workers sample",
    "description": "merges demographic and professional information from workers, along with participation in job programs, to a single sample. It asses balance in program assignation.",
    "last_updated": "2025-03-19T23:33:44Z",
    "url": "https://github.com/juanguillermo3/evaluation_of_job_intermediation_program/blob/main/sample_balance_in_workers_sample.R",
    "file_path": "sample_balance_in_workers_sample.R",
    "repo_name": "evaluation_of_job_intermediation_program",
    "image_path": "assets/sample_balance.png",
    "libraries": [
      "ggplot2",
      "ggrepel",
      "scales",
      "dplyr",
      "tidyr",
      "tools"
    ],
    "image_url": "assets/sample_balance.png"
  },
  {
    "title": "Worker Profiles Module",
    "description": "Extracts and processes features from the curricula of workers registered with the job agency.",
    "last_updated": "2025-01-27T04:02:35Z",
    "url": "https://github.com/juanguillermo3/evaluation_of_job_intermediation_program/blob/main/worker_profiles.R",
    "file_path": "worker_profiles.R",
    "repo_name": "evaluation_of_job_intermediation_program",
    "libraries": []
  },
  {
    "title": "Hirings",
    "description": "Distributes data about hirings per worker.",
    "libraries": [
      "dplyr"
    ],
    "last_updated": "2025-03-22T03:11:57Z",
    "url": "https://github.com/juanguillermo3/evaluation_of_job_intermediation_program/blob/main/hirings.R",
    "file_path": "hirings.R",
    "repo_name": "evaluation_of_job_intermediation_program"
  },
  {
    "title": "Labor Market Outcomes",
    "description": "Summarizes the employment outcomes of workers assisted by the job agency. It computes several individual-level metrics, such as the total number of hires, as well as hires in high-income positions and permanent contract roles.",
    "image_path": "assets/hiring_rates_*.png",
    "libraries": [
      "ggplot2",
      "stringr",
      "scales",
      "dplyr",
      "tidyr"
    ],
    "last_updated": "2025-03-22T03:19:24Z",
    "url": "https://github.com/juanguillermo3/evaluation_of_job_intermediation_program/blob/main/laboral_outcomes.R",
    "file_path": "laboral_outcomes.R",
    "repo_name": "evaluation_of_job_intermediation_program"
  },
  {
    "title": "Merge Workers Dataset with Hiring Rates",
    "description": "This module merges the worker-level dataset (spanning demographics, labor background, and program participation status) with the hiring rates per worker. The merged dataset is used to provide a basic comparison of hiring rates across different engagement levels in the agency program, offering a preliminary estimate of the program's effect.",
    "image_path": "assets/naive_*.png",
    "libraries": [
      "dplyr",
      "ggplot2"
    ],
    "last_updated": "2025-03-23T00:33:52Z",
    "url": "https://github.com/juanguillermo3/evaluation_of_job_intermediation_program/blob/main/hiring_rates_per_engagement.R",
    "file_path": "hiring_rates_per_engagement.R",
    "repo_name": "evaluation_of_job_intermediation_program"
  },
  {
    "title": "deduplication service for the job listings",
    "description": "Provides a brute_force_deduplication to deduplicate an RDD with the job listings, by implementing a reduceByKey op which only keep the first text per vancancy code.",
    "last_updated": "2025-02-21T20:56:31Z",
    "url": "https://github.com/juanguillermo3/lab_market_trends/blob/main/deduplication.py",
    "file_path": "deduplication.py",
    "repo_name": "lab_market_trends",
    "libraries": [
      "typing",
      "pyspark",
      "re"
    ]
  },
  {
    "title": "ingestions service for the job listings",
    "description": "Reads job listings from a disk folder where scrapped data is located. Discard files that dont follow the expected structure.",
    "last_updated": "2025-01-23T09:52:15Z",
    "url": "https://github.com/juanguillermo3/lab_market_trends/blob/main/ingestion_of_job_listings.py",
    "file_path": "ingestion_of_job_listings.py",
    "repo_name": "lab_market_trends",
    "libraries": [
      "os",
      "logging",
      "re",
      "gzip"
    ]
  },
  {
    "project": "lab_market_trends",
    "title": "Jobs Vacancies scrapper",
    "description": "This modules performs scrapping of job listings",
    "author": "Juan Guillermo",
    "field": "something Include in Portfolio: True",
    "portfolio": "True",
    "last_updated": "2025-01-04T07:12:43Z",
    "url": "https://github.com/juanguillermo3/lab_market_trends/blob/main/job_listing_scrapper_1.2.py",
    "file_path": "job_listing_scrapper_1.2.py",
    "repo_name": "lab_market_trends",
    "libraries": [
      "dotenv",
      "time",
      "gzip",
      "datetime",
      "airflow",
      "os",
      "selenium",
      "dateutil",
      "re",
      "logging"
    ]
  },
  {
    "title": "single provider for the job listings RDD",
    "description": "A single source of truth for an RDD with job listings. Implements dependency injection to stack several services, such as ingestion and deduplication.",
    "last_updated": "2025-01-28T05:28:38Z",
    "url": "https://github.com/juanguillermo3/lab_market_trends/blob/main/main_provider_curated_job_listings_rdd.py",
    "file_path": "main_provider_curated_job_listings_rdd.py",
    "repo_name": "lab_market_trends",
    "libraries": [
      "dotenv",
      "ingestion_of_job_listings",
      "deduplication",
      "spark_session_management",
      "logging"
    ]
  },
  {
    "title": "Dates Range",
    "description": "Describes de temporal range (dates covered) by the job listings",
    "last_updated": "2025-01-28T05:26:59Z",
    "url": "https://github.com/juanguillermo3/lab_market_trends/blob/main/dates.py",
    "file_path": "dates.py",
    "repo_name": "lab_market_trends",
    "libraries": [
      "dotenv",
      "pandas",
      "datetime",
      "re",
      "matplotlib",
      "logging"
    ]
  },
  {
    "title": "Feature Extraction",
    "description": "Perform extraction of significant features for the job listings dataset.",
    "last_updated": "2025-02-06T04:38:42Z",
    "url": "https://github.com/juanguillermo3/lab_market_trends/blob/main/features.py",
    "file_path": "features.py",
    "repo_name": "lab_market_trends",
    "libraries": [
      "dotenv",
      "time",
      "datetime",
      "preprocess",
      "pyspark",
      "os",
      "phrases",
      "collections",
      "re",
      "main_provider_curated_job_listings_rdd",
      "logging"
    ]
  },
  {
    "title": "Phrases discovery",
    "description": "Provides tool for discovery of significant N-gram based phrases based on n-grams and lift metrics.",
    "last_updated": "2025-02-06T04:38:01Z",
    "url": "https://github.com/juanguillermo3/lab_market_trends/blob/main/phrases.py",
    "file_path": "phrases.py",
    "repo_name": "lab_market_trends",
    "libraries": [
      "json",
      "dotenv",
      "datetime",
      "preprocess",
      "pyspark",
      "os",
      "collections",
      "re",
      "main_provider_curated_job_listings_rdd",
      "logging"
    ]
  },
  {
    "title": "Preprocessing",
    "description": "Provides tools to prepare job listings for feature discovery/extraction on standardized text.",
    "last_updated": "2025-02-06T04:36:10Z",
    "url": "https://github.com/juanguillermo3/lab_market_trends/blob/main/preprocess.py",
    "file_path": "preprocess.py",
    "repo_name": "lab_market_trends",
    "libraries": [
      "unicodedata",
      "textwrap",
      "re"
    ]
  },
  {
    "title": "Wages Analysis",
    "description": "Plots the distribution on wages in job listings, overall vs segment specific",
    "last_updated": "2025-02-06T04:26:27Z",
    "url": "https://github.com/juanguillermo3/lab_market_trends/blob/main/wages.py",
    "file_path": "wages.py",
    "repo_name": "lab_market_trends",
    "galleria": "True",
    "image_path": "assets/wages.png",
    "libraries": [
      "pandas",
      "matplotlib",
      "re"
    ]
  },
  {
    "title": "Wages Drivers",
    "description": "Detects the main drivers behind wage formation trough the analysis of the gradients of a Neural Network model.",
    "image_path": "assets/wages_drrivers.png",
    "galleria": "True",
    "repo_name": "lab_market_trends",
    "url": "https://github.com/juanguillermo3/lab_market_trends/blob/main/wages_drivers.py",
    "forced_rank": "2",
    "libraries": [
      "pandas",
      "tensorflow",
      "os",
      "typing",
      "numpy",
      "plotly",
      "random"
    ],
    "last_updated": "2025-02-06T05:01:44Z",
    "file_path": "wages_drivers.py"
  },
  {
    "title": "Neural Networks for Wages Prediction",
    "description": "Provides a deep learning approach based on a deep, feed-forward NN to predict wages.",
    "image_path": "assets/learning_curve.html",
    "galleria": "True",
    "repo_name": "lab_market_trends",
    "url": "https://github.com/juanguillermo3/lab_market_trends/blob/main/deep_learning.py",
    "forced_rank": "3",
    "libraries": [
      "dotenv",
      "pandas",
      "sklearn",
      "ml_samples",
      "tensorflow",
      "plotly",
      "pyspark",
      "spark_session_management",
      "os",
      "numpy",
      "logging",
      "random"
    ],
    "last_updated": "2025-02-27T05:47:44Z",
    "file_path": "deep_learning.py"
  },
  {
    "title": "Overall Application",
    "description": "Connected version of the wages appication. It combines several modules into a sequence of workflows to analyze wages formation in the Colombian laboral market",
    "image_path": "assets/lab_market_trends_network_plot.html",
    "colab_url": "https://colab.research.google.com/drive/1gY17gbUdUxpWv2Ddooo0niPCkmqg8-hg#scrollTo=Hwfe5gZe3e_A>",
    "galleria": "True",
    "repo_name": "lab_market_trends",
    "forced_rank": "1"
  },
  {
    "title": "Feature Transformation",
    "description": "Converts an RDD to a pandas DataFrame and pipelines operations to create numerical features for downstream machine learning tasks.",
    "libraries": [
      "json",
      "dotenv",
      "time",
      "datetime",
      "preprocess",
      "pyspark",
      "os",
      "typing",
      "phrases",
      "features",
      "main_provider_curated_job_listings_rdd",
      "numpy",
      "logging"
    ],
    "last_updated": "2025-02-06T04:43:58Z",
    "url": "https://github.com/juanguillermo3/lab_market_trends/blob/main/feature_transformation.py",
    "file_path": "feature_transformation.py",
    "repo_name": "lab_market_trends"
  },
  {
    "title": "Commit Inference",
    "description": "Commits the marginal effects and metadata of an inference exercise.  Structured around a Unit of Work (single-transaction) pattern. Depends on: inferences_db.py",
    "libraries": [
      "inferences_db",
      "sqlalchemy",
      "datetime"
    ],
    "last_updated": "2025-02-27T06:29:38Z",
    "url": "https://github.com/juanguillermo3/lab_market_trends/blob/main/commit_inference.py",
    "file_path": "commit_inference.py",
    "repo_name": "lab_market_trends"
  },
  {
    "title": "Discover Wage Drivers",
    "description": "Key operational workflow, which fits a NN model for wages and discover wages drivers",
    "libraries": [
      "datetime",
      "deep_learning",
      "ml_samples",
      "commit_inference",
      "spark_session_management",
      "wages_drivers",
      "os"
    ],
    "last_updated": "2025-02-27T06:33:02Z",
    "url": "https://github.com/juanguillermo3/lab_market_trends/blob/main/discover_wage_drivers.py",
    "file_path": "discover_wage_drivers.py",
    "repo_name": "lab_market_trends"
  },
  {
    "title": "Inferences Database",
    "description": "Provides a database model using SQLAlchemy to store marginal effects related to specific inference exercises.",
    "libraries": [
      "sqlalchemy",
      "datetime"
    ],
    "last_updated": "2025-02-27T06:29:08Z",
    "url": "https://github.com/juanguillermo3/lab_market_trends/blob/main/inferences_db.py",
    "file_path": "inferences_db.py",
    "repo_name": "lab_market_trends"
  },
  {
    "title": "Main ETL",
    "description": "Transform and RDD of job postings into ML samples and stores in disk.",
    "libraries": [
      "preprocess",
      "ml_samples",
      "shutil",
      "os",
      "phrases",
      "features",
      "main_provider_curated_job_listings_rdd",
      "feature_transformation"
    ],
    "last_updated": "2025-02-27T06:10:22Z",
    "url": "https://github.com/juanguillermo3/lab_market_trends/blob/main/main_etl.py",
    "file_path": "main_etl.py",
    "repo_name": "lab_market_trends"
  },
  {
    "title": "ML samples",
    "description": "Several tools for writing and reading a vectorized dataframe as partitioned data on disk and serving the ML samples for training.",
    "libraries": [
      "json",
      "dotenv",
      "shutil",
      "logging",
      "os",
      "typing",
      "numpy",
      "pyspark"
    ],
    "last_updated": "2025-02-27T05:50:18Z",
    "url": "https://github.com/juanguillermo3/lab_market_trends/blob/main/ml_samples.py",
    "file_path": "ml_samples.py",
    "repo_name": "lab_market_trends"
  },
  {
    "title": "Generate Comprehensive Excel Reports",
    "description": "A flexible function to create Excel reports with dataframes, ggplots, leaflet maps, and nested lists of content.",
    "last_updated": "2025-01-17T06:10:14Z",
    "url": "https://github.com/juanguillermo3/monkey_research/blob/main/flexible_excel_reports.R",
    "file_path": "flexible_excel_reports.R",
    "repo_name": "monkey_research",
    "libraries": [
      "grid",
      "ggplot2",
      "png",
      "webshot",
      "leaflet",
      "openxlsx",
      "gridExtra"
    ]
  },
  {
    "title": "Flexible Comparison Across Groups",
    "description": "Performs statistical tests to compare measurements of a dependent variable across groups defined by an independent variable. Supports multiple behaviors for ecological studies.",
    "last_updated": "2025-02-26T01:37:20Z",
    "url": "https://github.com/juanguillermo3/monkey_research/blob/main/flexible_test_across_groups.R",
    "file_path": "flexible_test_across_groups.R",
    "repo_name": "monkey_research",
    "libraries": [
      "dunn.test",
      "dplyr",
      "coin",
      "purrr"
    ]
  },
  {
    "title": "Food Index over Transect Data",
    "description": "This scripts performs the computation and vizualization of the food availability data over the vegetation records (transect data) for all the home ranges of the monkey species",
    "last_updated": "2025-01-17T06:13:28Z",
    "url": "https://github.com/juanguillermo3/monkey_research/blob/main/food_availability_index_over_transect_data.R",
    "file_path": "food_availability_index_over_transect_data.R",
    "repo_name": "monkey_research",
    "libraries": [
      "lubridate",
      "ggplot2",
      "dplyr",
      "RSQLite",
      "ggrepel",
      "readxl",
      "tidyr",
      "stringr",
      "openxlsx"
    ]
  },
  {
    "title": "Home range sizes trough CPE",
    "description": "Implements a the Minimum Convex Polygon Estimator to compute the home range sizes for each of 4 monkey groups under study",
    "report_url": "https://docs.google.com/spreadsheets/d/1Dr48Q6WI18ldeaSUnL_C2OpaVQPiSNGv/edit?gid=1820260740#gid=1820260740",
    "last_updated": "2025-02-04T23:57:40Z",
    "url": "https://github.com/juanguillermo3/monkey_research/blob/main/home_ranges.R",
    "file_path": "home_ranges.R",
    "repo_name": "monkey_research",
    "image_path": "assets/waypoints_*.html",
    "galleria": "True",
    "libraries": [
      "lubridate",
      "ggplot2",
      "sp",
      "adehabitatHR",
      "dplyr",
      "RSQLite",
      "plyr",
      "htmlwidgets",
      "tidyr",
      "purrr",
      "leaflet",
      "openxlsx",
      "sf",
      "magrittr",
      "rgdal"
    ]
  },
  {
    "title": "Computation of Morisita Index",
    "description": "Computes the Morisita Index for spatial dispersion for the home range of each monkey species",
    "portfolio": "True",
    "project": "monkey_research",
    "version": "2.1.0",
    "date": "2025-01-02",
    "last_updated": "2025-01-10T03:30:16Z",
    "url": "https://github.com/juanguillermo3/monkey_research/blob/main/morisita_index.R",
    "file_path": "morisita_index.R",
    "repo_name": "monkey_research",
    "libraries": [
      "writexl",
      "dplyr",
      "openxlsx",
      "RSQLite"
    ]
  },
  {
    "title": "Geometric Modelling for Nutrition Data",
    "description": "Applies Geometric Modelling based on dimensionality reduction to analize nutritional preferences of the monkey species.",
    "debrief": "This module performs a visualization devide to facilitate the analisis of the main nutritional profiles for the monkey groups under study.",
    "image_path": "assets/gm_per_*.png",
    "last_updated": "2025-02-12T03:42:26Z",
    "url": "https://github.com/juanguillermo3/monkey_research/blob/main/geometric_modelling.R",
    "file_path": "geometric_modelling.R",
    "repo_name": "monkey_research",
    "galleria": "True",
    "libraries": [
      "ggplot2",
      "dplyr",
      "ggrepel",
      "reshape2",
      "readxl",
      "ggcorrplot"
    ]
  },
  {
    "title": "Habitat islands",
    "description": "Applies k-means clustering within a self-calibration framework to discover smaller partitions habitat islands from sights data. It is useful in ecological studies to decompose the habitat of some species into smaller habitats thus allowing statistical analysis of home range sizes, such as correlation with habitat parameters.",
    "debrief": "",
    "url": "https://github.com/juanguillermo3/monkey_research/blob/main/discover_habitat_islands.R",
    "repo_name": "monkey_research",
    "galleria": "True",
    "image_path": "assets/islands_*.html",
    "libraries": [
      "sp",
      "adehabitatHR",
      "dplyr",
      "leaflet",
      "sf"
    ],
    "last_updated": "2025-02-14T01:03:40Z",
    "file_path": "discover_habitat_islands.R"
  },
  {
    "title": "Spatial correlation analysis",
    "description": "Computes correlation between home ranges sizes and habitat parameters",
    "report_url": "https://docs.google.com/spreadsheets/d/1KMhoqoPNrcP8Gp5eimwHmUeiFZZhKekL/edit?gid=521562748#gid=521562748",
    "last_updated": "2025-01-25T03:55:16Z",
    "url": "https://github.com/juanguillermo3/monkey_research/blob/main/correlation_patterns.R",
    "repo_name": "monkey_research",
    "galleria": "True",
    "image_path": "assets/plots_and_islands_*.html",
    "libraries": [
      "RColorBrewer",
      "ggplot2",
      "sp",
      "cluster",
      "adehabitatHR",
      "dplyr",
      "tmap",
      "stringr",
      "leaflet",
      "sf"
    ],
    "file_path": "correlation_patterns.R"
  },
  {
    "title": "Geometric modelling tools",
    "libraries": [
      "reshape2",
      "ggrepel",
      "ggcorrplot"
    ],
    "last_updated": "2025-02-12T03:42:26Z",
    "url": "https://github.com/juanguillermo3/monkey_research/blob/main/geometric_modelling_tools.R",
    "file_path": "geometric_modelling_tools.R",
    "repo_name": "monkey_research"
  },
  {
    "title": "Behavioural Analysis",
    "description": "This modules performs several comparisons to detect behavioral differences between monkey groups defined by species, sex, and reproductive status. It utilizes an engine of inferential statistics powered by the dunn test and a custom implementation of blocked boostrapping algorithm",
    "report_url": "https://docs.google.com/spreadsheets/d/1JxmBCHIgdH5HYbL0C6YYk3DgW5ZwhmKc/edit?gid=1502020711#gid=1502020711",
    "image_path": "assets/behav_*.png",
    "libraries": [
      "ggplot2",
      "dplyr",
      "tidyr",
      "purrr",
      "openxlsx",
      "magrittr"
    ],
    "last_updated": "2025-02-26T02:17:23Z",
    "url": "https://github.com/juanguillermo3/monkey_research/blob/main/behavioural_analysis.R",
    "file_path": "behavioural_analysis.R",
    "repo_name": "monkey_research",
    "galleria": "True",
    "file_type": ".r"
  },
  {
    "title": "Bootstrapping",
    "description": "Custom implementation of blocked-bootstrapping algorithm",
    "libraries": [
      "dplyr",
      "purrr"
    ],
    "last_updated": "2025-02-26T01:37:20Z",
    "url": "https://github.com/juanguillermo3/monkey_research/blob/main/bootstrapping.R",
    "file_path": "bootstrapping.R",
    "repo_name": "monkey_research"
  },
  {
    "title": "Dataframe extentions",
    "description": "Provide several enancements to regular R dataframe, wich can be used in dplyr pipelines",
    "libraries": [
      "dplyr",
      "stringr"
    ],
    "last_updated": "2025-02-26T01:37:20Z",
    "url": "https://github.com/juanguillermo3/monkey_research/blob/main/dataframe_extentions.R",
    "file_path": "dataframe_extentions.R",
    "repo_name": "monkey_research"
  },
  {
    "project": "new_professional_portfolio",
    "title": "Web Application",
    "description": "Streamlit based Front-End application for my professional portfolio.",
    "author": "Juan Guillermo",
    "field": "something",
    "last_updated": "2025-03-20T22:49:54Z",
    "url": "https://github.com/juanguillermo3/new_professional_portfolio/blob/main/app_prof_site_blueprint.py",
    "file_path": "app_prof_site_blueprint.py",
    "repo_name": "new_professional_portfolio",
    "libraries": [
      "streamlit",
      "os",
      "professional_bio",
      "floating_buttons",
      "dotenv",
      "floating_whatsapp_button",
      "about_section",
      "git_api_utils",
      "socials_section",
      "rec_sys",
      "front_end_utils",
      "tooltip_canvas",
      "hero_area",
      "floating_linkedin_button",
      "testimonials",
      "services_section"
    ],
    "galleria": "True",
    "image_path": "assets/new_professional_*.html",
    "forced_rank": "1"
  },
  {
    "title": "Curriculum Vitae",
    "description": "CV area for a modern proffesional portfolio. The gist of it is serving an elegant front end representation of a couple of unordered lists: work items, experience items. Its design is inspired by modern job intermediation sites.",
    "last_updated": "2025-01-23T11:33:28Z",
    "url": "https://github.com/juanguillermo3/new_professional_portfolio/blob/main/professional_bio.py",
    "file_path": "professional_bio.py",
    "repo_name": "new_professional_portfolio"
  },
  {
    "title": "Recommendation System",
    "description": "Implements a portfolio section to display recommended content (projects, code samples) from an                underlying professional portfolio. Assuming key project metadata is provided by external services                (i.e., the collector is external), this class applies the ranker and serves portions of a RecSys                system. Moreover, it creates visually appealing representations of the recommended content.",
    "last_updated": "2025-03-20T22:49:05Z",
    "url": "https://github.com/juanguillermo3/new_professional_portfolio/blob/main/rec_sys.py",
    "file_path": "rec_sys.py",
    "repo_name": "new_professional_portfolio",
    "libraries": [
      "exceptional_ui",
      "glob",
      "git_api_utils",
      "re",
      "biotech_lab",
      "os",
      "streamlit",
      "markdown",
      "datetime",
      "front_end_utils",
      "portfolio_section",
      "random",
      "media_carousel",
      "hashlib",
      "dotenv",
      "front_end_for_recommended_content",
      "app_end_metadata",
      "time",
      "visual_media"
    ]
  },
  {
    "title": "Hero section for a professional portfolio.",
    "description": "Low key hero section for a professional porftolio. Styled as a quote from a book with a biopick.",
    "author": "Juan Guillermo",
    "last_updated": "2025-02-24T20:14:16Z",
    "url": "https://github.com/juanguillermo3/new_professional_portfolio/blob/main/hero_area.py",
    "file_path": "hero_area.py",
    "repo_name": "new_professional_portfolio",
    "libraries": [
      "streamlit",
      "dotenv",
      "front_end_utils",
      "os",
      "hero_area_data_loader"
    ]
  },
  {
    "title": "Front-End for Recommended Data",
    "description": "Implements the front-end representation of items displayed by the RecSys. It aims to create elegant and informative components by combining Streamlit built-ins with custom styling.",
    "libraries": [
      "streamlit",
      "time",
      "html",
      "hashlib",
      "badges_for_item_data",
      "exceptional_ui",
      "media_carrousel",
      "front_end_utils",
      "tooltip_canvas",
      "re"
    ],
    "last_updated": "2025-03-21T03:47:34Z",
    "url": "https://github.com/juanguillermo3/new_professional_portfolio/blob/main/front_end_for_recommended_content.py",
    "file_path": "front_end_for_recommended_content.py",
    "repo_name": "new_professional_portfolio"
  },
  {
    "title": "Portfolio Section",
    "description": "An abstraction for the front-end representation of a portfolio section in a web app.  It provides a default render method that can be overridden and distributes generic behavior to  portfolio sections, such as housekeeping messages.",
    "libraries": [
      "streamlit"
    ],
    "last_updated": "2025-02-24T19:18:07Z",
    "url": "https://github.com/juanguillermo3/new_professional_portfolio/blob/main/portfolio_section.py",
    "file_path": "portfolio_section.py",
    "repo_name": "new_professional_portfolio"
  },
  {
    "title": "About Section",
    "description": "Portfolio section designed to display housekeeping information and important messages. It helps users              understand the purpose of the web application.",
    "libraries": [
      "portfolio_section",
      "streamlit",
      "exceptional_quote",
      "about_section_data_loader"
    ],
    "last_updated": "2025-03-15T06:24:35Z",
    "url": "https://github.com/juanguillermo3/new_professional_portfolio/blob/main/about_section.py",
    "file_path": "about_section.py",
    "repo_name": "new_professional_portfolio"
  },
  {
    "title": "APP End Metadata",
    "description": "A lightweight storage for additional metadata related to portfolio repositories. It helps front-end               engineers include extra information about different projects, such as tags, milestones, and completion               status. More specialized in displaying engaging information that complements essential project data.",
    "libraries": [],
    "last_updated": "2025-03-02T01:07:52Z",
    "url": "https://github.com/juanguillermo3/new_professional_portfolio/blob/main/app_end_metadata.py",
    "file_path": "app_end_metadata.py",
    "repo_name": "new_professional_portfolio"
  },
  {
    "title": "Exceptional Quote",
    "description": "A custom front-end component to highlight notable quotes.",
    "libraries": [
      "streamlit"
    ],
    "last_updated": "2025-02-28T05:25:21Z",
    "url": "https://github.com/juanguillermo3/new_professional_portfolio/blob/main/exceptional_quote.py",
    "file_path": "exceptional_quote.py",
    "repo_name": "new_professional_portfolio"
  },
  {
    "title": "Floating Linkedin Button",
    "description": "Renders a floating component for Linkedin account.",
    "libraries": [
      "os",
      "streamlit"
    ],
    "last_updated": "2025-02-28T04:58:21Z",
    "url": "https://github.com/juanguillermo3/new_professional_portfolio/blob/main/floating_linkedin_button.py",
    "file_path": "floating_linkedin_button.py",
    "repo_name": "new_professional_portfolio"
  },
  {
    "title": "Floating Whatsapp Button",
    "description": "Renders a floating component for whatsapp communication. Servers as a contant invitiation to the client to stablish a connection.",
    "libraries": [
      "os",
      "streamlit",
      "urllib"
    ],
    "last_updated": "2025-03-21T00:25:07Z",
    "url": "https://github.com/juanguillermo3/new_professional_portfolio/blob/main/floating_whatsapp_button.py",
    "file_path": "floating_whatsapp_button.py",
    "repo_name": "new_professional_portfolio"
  },
  {
    "title": "Front-End Utils",
    "description": "Contains various utilities for design across portfolio sections.",
    "libraries": [
      "random",
      "streamlit",
      "exceptional_ui",
      "html"
    ],
    "last_updated": "2025-03-21T01:42:41Z",
    "url": "https://github.com/juanguillermo3/new_professional_portfolio/blob/main/front_end_utils.py",
    "file_path": "front_end_utils.py",
    "repo_name": "new_professional_portfolio"
  },
  {
    "title": "Git API Utils",
    "description": "This module leverages advanced features of the Git API to gather metadata on projects (repositories)               and application modules (individual files). With the right credentials, it builds a pipeline that               combines custom metadata with GitHub-provided insights, transforming a Git account into a powerful               repository of portfolio intelligence across multiple projects.",
    "libraries": [
      "os",
      "logging",
      "ast",
      "dotenv",
      "json",
      "re",
      "requests"
    ],
    "last_updated": "2025-02-28T06:11:01Z",
    "url": "https://github.com/juanguillermo3/new_professional_portfolio/blob/main/git_api_utils.py",
    "file_path": "git_api_utils.py",
    "repo_name": "new_professional_portfolio"
  },
  {
    "title": "Hero Section",
    "description": "A subtle yet impactful hero section for a professional portfolio. Styled as a book quote with a bio picture,               it presents essential information and key call-to-action elements.",
    "libraries": [
      "streamlit",
      "os",
      "dotenv",
      "exceptional_ui",
      "front_end_utils",
      "hero_area_data_loader"
    ],
    "last_updated": "2025-03-13T00:24:01Z",
    "url": "https://github.com/juanguillermo3/new_professional_portfolio/blob/main/hero_area.py",
    "file_path": "hero_area.py",
    "repo_name": "new_professional_portfolio"
  },
  {
    "title": "Professional Bio",
    "description": "A portfolio section dedicated to showcasing the owner's Curriculum Vitae and professional background.               It is structured around a main professional statement and two key sections: work experience and education.               Its design is inspired by modern job platforms, ensuring a clean and engaging presentation.",
    "libraries": [
      "random",
      "streamlit",
      "cv_data_loader",
      "front_end_utils",
      "portfolio_section"
    ],
    "last_updated": "2025-03-13T08:59:03Z",
    "url": "https://github.com/juanguillermo3/new_professional_portfolio/blob/main/professional_bio.py",
    "file_path": "professional_bio.py",
    "repo_name": "new_professional_portfolio"
  },
  {
    "title": "Services",
    "description": "A portfolio section designed to clarify the main services offered by the system owner. It is structured               around a set of service items, which can be retrieved from proprietary systems. It is advisable to include               complementary details such as pricing (hourly rates, fixed fees) and engagement terms, as well as a clear               process for initiating collaboration (e.g., consultation, proposal, contract signing).",
    "libraries": [
      "services_data_loader",
      "streamlit",
      "os",
      "dotenv",
      "front_end_for_recommended_content",
      "portfolio_section",
      "random"
    ],
    "last_updated": "2025-03-15T05:00:33Z",
    "url": "https://github.com/juanguillermo3/new_professional_portfolio/blob/main/services_section.py",
    "file_path": "services_section.py",
    "repo_name": "new_professional_portfolio"
  },
  {
    "title": "Visual Media",
    "description": "Showcases the VisualContentGallery, designed to create a visually compelling representation of media               across multiple projects. It emphasizes visuals as a central element of the user experience, enhancing               engagement and storytelling.",
    "libraries": [
      "glob",
      "os",
      "streamlit"
    ],
    "last_updated": "2025-02-28T06:45:57Z",
    "url": "https://github.com/juanguillermo3/new_professional_portfolio/blob/main/visual_media.py",
    "file_path": "visual_media.py",
    "repo_name": "new_professional_portfolio"
  },
  {
    "title": "Badges for Items",
    "description": "This badge system applies visual cues using emojis to enhance the front-end representation of recommended items.                Badges are assigned based on predefined rules applied to item metadata, providing subtle yet meaningful                additional context. This helps improve the user experience by making item information more visually intuitive.",
    "libraries": [
      "os",
      "html",
      "datetime",
      "exceptional_ui",
      "front_end_utils",
      "re"
    ],
    "last_updated": "2025-03-16T21:58:38Z",
    "url": "https://github.com/juanguillermo3/new_professional_portfolio/blob/main/badges_for_item_data.py",
    "file_path": "badges_for_item_data.py",
    "repo_name": "new_professional_portfolio"
  },
  {
    "title": "Bio Tech Design",
    "description": "",
    "libraries": [
      "html"
    ],
    "last_updated": "2025-03-13T08:03:05Z",
    "url": "https://github.com/juanguillermo3/new_professional_portfolio/blob/main/biotech_lab.py",
    "file_path": "biotech_lab.py",
    "repo_name": "new_professional_portfolio"
  },
  {
    "title": "Exceptional UI",
    "description": "Implements beautiful front-end components using Streamlit, HTML, and CSS to create a smooth and delightful user experience.",
    "libraries": [
      "streamlit",
      "time",
      "html",
      "hashlib",
      "datetime"
    ],
    "last_updated": "2025-03-19T00:39:36Z",
    "url": "https://github.com/juanguillermo3/new_professional_portfolio/blob/main/exceptional_ui.py",
    "file_path": "exceptional_ui.py",
    "repo_name": "new_professional_portfolio"
  },
  {
    "title": "Example Jupyter Notebook",
    "author": "Taylor White",
    "date": "2025-01-14",
    "description": "This notebook demonstrates extracting metadata for Jupyter.",
    "url": "https://github.com/juanguillermo3/predictive_analytics/blob/main/ensemble_learning.ipynb",
    "file_path": "ensemble_learning.ipynb",
    "repo_name": "predictive_analytics"
  },
  {
    "title": "Overall Application",
    "description": "Connected version of the forecasting application. It combines capabilities from several modules into a sequence of workflows to forecast sales for the food delivery context.",
    "image_path": "assets/sales_forecasting_with_genetic_neural_networks_network_plot.html",
    "colab_url": "https://colab.research.google.com/drive/1QKFY5zfiRkUUPrnhlsOrtRlqGJ14oFf3#scrollTo=ZznO-uxNus8v",
    "galleria": "True",
    "repo_name": "sales_forecasting_with_genetic_neural_networks",
    "forced_rank": "1",
    "report_url": "https://docs.google.com/spreadsheets/d/1-7xJZvAwYe9B4BYmJcA3-m1rAzf4CXNH/edit?gid=2146063770#gid=2146063770"
  },
  {
    "title": "Visualization of monthly sales",
    "description": "Visualization tool to inspect the behaviour of sales series produced by company\u00b4s data warehouse",
    "image_path": "assets/hourly_sales.png",
    "url": "https://github.com/juanguillermo3/sales_forecasting_with_genetic_neural_networks/blob/main/plot_sales.py",
    "galleria": "True",
    "repo_name": "sales_forecasting_with_genetic_neural_networks"
  },
  {
    "title": "Results Parser",
    "description": "Generates visual reports from optimization process results.   Depends on: plot_utils.py",
    "url": "https://github.com/juanguillermo3/sales_forecasting_with_genetic_neural_networks/blob/main/results.py",
    "repo_name": "sales_forecasting_with_genetic_neural_networks",
    "image_path": "results_*.png",
    "libraries": [
      "plot_utils",
      "matplotlib",
      "pandas"
    ],
    "last_updated": "2025-02-16T05:04:03Z",
    "file_path": "results.py"
  },
  {
    "title": "Plot Utilities",
    "description": "Provides styling and export functionalities for plots across the application.",
    "url": "https://github.com/juanguillermo3/sales_forecasting_with_genetic_neural_networks/blob/main/plot_utils.py",
    "repo_name": "sales_forecasting_with_genetic_neural_networks",
    "libraries": [
      "matplotlib",
      "logging",
      "plotly",
      "pandas"
    ],
    "last_updated": "2025-02-16T06:13:23Z",
    "file_path": "plot_utils.py"
  },
  {
    "title": "Prepare Time Series Data",
    "description": "Provides a TimeSeriesDataHandler which prepares time series data (loaded from disk) for ML model development. It performs feature extraction using lags of the same series beyond a target forecast horizon. The handler outputs numpy arrays suitable for model development.",
    "url": "https://github.com/juanguillermo3/sales_forecasting_with_genetic_neural_networks/blob/main/prepare_ts_data.py",
    "repo_name": "sales_forecasting_with_genetic_neural_networks",
    "libraries": [
      "json",
      "pandas",
      "sklearn",
      "plot_utils",
      "os",
      "numpy",
      "plotly"
    ],
    "last_updated": "2025-02-16T06:28:49Z",
    "file_path": "prepare_ts_data.py"
  },
  {
    "title": "Genetic Optimization",
    "description": "A custom implementation of a genetic optimization algorithm to find optimal hyperparameters for DL/ML models. image_path=ServerDNN*.html",
    "image_path": "assets/ServerDNN*.html",
    "repo_name": "sales_forecasting_with_genetic_neural_networks",
    "libraries": [
      "datetime",
      "os",
      "numpy",
      "time",
      "openpyxl",
      "matplotlib",
      "plotly",
      "json",
      "pandas",
      "abc",
      "prepare_ts_data",
      "plot_utils",
      "logging",
      "random",
      "sklearn",
      "shutil",
      "tensorflow",
      "typing",
      "optree"
    ],
    "last_updated": "2025-02-27T03:56:41Z",
    "url": "https://github.com/juanguillermo3/sales_forecasting_with_genetic_neural_networks/blob/main/genetic_optimization.py",
    "file_path": "genetic_optimization.py"
  },
  {
    "title": "Genetic Deep Learning",
    "description": "Sets up a Deep Neural Network model as target predictive model for genetic optimization",
    "libraries": [
      "numpy",
      "genetic_optimization",
      "tensorflow",
      "sklearn"
    ],
    "last_updated": "2025-02-27T03:46:42Z",
    "url": "https://github.com/juanguillermo3/sales_forecasting_with_genetic_neural_networks/blob/main/genetic_deep_learning.py",
    "file_path": "genetic_deep_learning.py",
    "repo_name": "sales_forecasting_with_genetic_neural_networks"
  },
  {
    "title": "Plot Sales",
    "description": "Plots the hourly sales for the food delivery service",
    "libraries": [
      "plot_utils",
      "matplotlib",
      "pandas"
    ],
    "last_updated": "2025-02-27T03:44:22Z",
    "url": "https://github.com/juanguillermo3/sales_forecasting_with_genetic_neural_networks/blob/main/plot_sales.py",
    "file_path": "plot_sales.py",
    "repo_name": "sales_forecasting_with_genetic_neural_networks"
  },
  {
    "title": "Data Manager",
    "description": "Handles ingestion merge and exploratory plottin of 3 data sources              for spatial analysis.",
    "libraries": [
      "folium",
      "pandas",
      "geopandas",
      "plotly",
      "numpy"
    ],
    "last_updated": "2025-03-09T07:08:43Z",
    "url": "https://github.com/juanguillermo3/site_recommendation_system/blob/main/data_manager.py",
    "file_path": "data_manager.py",
    "repo_name": "site_recommendation_system"
  },
  {
    "title": "Perform Exploratory Analysis",
    "description": "Merges the data sources for spatial analysis and produces exploratory plots",
    "image_path": "{stores_summary.html,plot_store_location_*}",
    "libraries": [
      "dotenv",
      "stores_placements",
      "spatial_features",
      "plotly_styles",
      "os",
      "data_manager",
      "spatial_frame"
    ],
    "last_updated": "2025-03-09T07:08:43Z",
    "url": "https://github.com/juanguillermo3/site_recommendation_system/blob/main/perform_exploratory_analysis.py",
    "file_path": "perform_exploratory_analysis.py",
    "repo_name": "site_recommendation_system"
  },
  {
    "title": "Perform Spatial Baseline",
    "description": "Performs the training of baseline model to predict store placements from underlyng              zip data",
    "image_path": "assets/plot_probabilities_*.html",
    "libraries": [
      "dotenv",
      "stores_placements",
      "spatial_features",
      "plotly_styles",
      "os",
      "spatial_frame",
      "spatial_baseline"
    ],
    "last_updated": "2025-03-09T07:08:43Z",
    "url": "https://github.com/juanguillermo3/site_recommendation_system/blob/main/perform_spatial_baseline.py",
    "file_path": "perform_spatial_baseline.py",
    "repo_name": "site_recommendation_system"
  },
  {
    "title": "Perform Spatial Correlation Analysis",
    "description": "Performs the Spatial Correlation Analysis",
    "image_path": "{correlation_bars.html,plot_store_location_with_proximity_*}",
    "libraries": [
      "dotenv",
      "stores_placements",
      "spatial_features",
      "plotly_styles",
      "os",
      "spatial_correlation",
      "spatial_frame"
    ],
    "last_updated": "2025-03-09T07:08:43Z",
    "url": "https://github.com/juanguillermo3/site_recommendation_system/blob/main/perform_spatial_correlation_analysis.py",
    "file_path": "perform_spatial_correlation_analysis.py",
    "repo_name": "site_recommendation_system"
  },
  {
    "title": "plot styles",
    "description": "Defines several decorators to distributes a custom styles across the plotly figures of a project,              thus providing standardization and a cohesive style. Full suport on plotly. Partial support on Folium              maps",
    "libraries": [
      "functools",
      "plotly",
      "folium",
      "textwrap"
    ],
    "last_updated": "2025-03-09T07:08:43Z",
    "url": "https://github.com/juanguillermo3/site_recommendation_system/blob/main/plot_styles.py",
    "file_path": "plot_styles.py",
    "repo_name": "site_recommendation_system"
  },
  {
    "title": "Spatial Baseline",
    "description": "Elaborates SpatialBaseline. It provides a baseline ML model to predict store placements              from underlyng data about the zip codes.",
    "libraries": [
      "sklearn",
      "folium",
      "pandas",
      "spatial_correlation",
      "branca",
      "warnings",
      "shapely",
      "geopandas",
      "plotly",
      "numpy"
    ],
    "last_updated": "2025-03-09T07:08:43Z",
    "url": "https://github.com/juanguillermo3/site_recommendation_system/blob/main/spatial_baseline.py",
    "file_path": "spatial_baseline.py",
    "repo_name": "site_recommendation_system"
  },
  {
    "title": "Spatial Correlation",
    "description": "Elaborates StoreLocationDataManager. It provides methods to asses the correlation pattern              between zip level features and the stores location.",
    "libraries": [
      "dotenv",
      "sklearn",
      "folium",
      "pandas",
      "os",
      "warnings",
      "shapely",
      "geopandas",
      "plotly",
      "data_manager"
    ],
    "last_updated": "2025-03-09T07:08:43Z",
    "url": "https://github.com/juanguillermo3/site_recommendation_system/blob/main/spatial_correlation.py",
    "file_path": "spatial_correlation.py",
    "repo_name": "site_recommendation_system"
  },
  {
    "title": "Spatial Features",
    "description": "Provides a dataframe with zip level spatial features from the US",
    "libraries": [
      "dotenv",
      "pandas",
      "re",
      "os"
    ],
    "last_updated": "2025-03-09T07:08:43Z",
    "url": "https://github.com/juanguillermo3/site_recommendation_system/blob/main/spatial_features.py",
    "file_path": "spatial_features.py",
    "repo_name": "site_recommendation_system"
  },
  {
    "title": "Spatial Frame Processing",
    "description": "This script processes spatial data from shapefiles and standardizes ZIP codes.",
    "libraries": [
      "dotenv",
      "geopandas",
      "os"
    ],
    "last_updated": "2025-03-09T07:08:43Z",
    "url": "https://github.com/juanguillermo3/site_recommendation_system/blob/main/spatial_frame.py",
    "file_path": "spatial_frame.py",
    "repo_name": "site_recommendation_system"
  },
  {
    "title": "Store Placements Processing",
    "description": "This script processes store locations and standardizes ZIP codes.",
    "libraries": [
      "dotenv",
      "pandas",
      "os",
      "geopandas",
      "plotly",
      "numpy"
    ],
    "last_updated": "2025-03-09T07:08:43Z",
    "url": "https://github.com/juanguillermo3/site_recommendation_system/blob/main/stores_placements.py",
    "file_path": "stores_placements.py",
    "repo_name": "site_recommendation_system"
  },
  {
      "title": "site_recommendation_system",
      "tags": [
          "Spatial Analysis",
          "Spatial Intelligence",
          "Recommendation Systems",
          "Geographic Information Systems",
          "Gradient Boosting"
      ],
      "description": "The site recommendation system performs ranking and recommendations of ZIP codes where a grocery store should consider future openings. The system analyzes historical store locations and integrates fine-grained demographic and socioeconomic data from U.S. ZIP codes. Using machine learning, it predicts optimal locations for new stores by identifying ZIP codes with a high probability of a new opening. The underlying probability model ranks potential store locations in U.S. states not included in the training data.",
      "achieved_milestones": [
          "Performed web scraping to collect location data about historical store placement.",
          "Merged store location data with zip-level demographics and socioeconomic features.",
          "Implemented machine learning models to classify out-of-sample ZIP codes into fitting/unfitting locations."
      ],
      "business_impact": [
          "Create spatial intelligence by identifying locations tailored to business needs.",
          "Gain a competitive advantage by accelerating expansion opportunities."
      ]
  }

]
